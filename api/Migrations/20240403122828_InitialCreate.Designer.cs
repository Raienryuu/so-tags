// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SO_tags;

#nullable disable

namespace SO_tags.Migrations
{
    [DbContext(typeof(LocalTagsContext))]
    [Migration("20240403122828_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.3");

            modelBuilder.Entity("SO_tags.Models.Tag", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "name");

                    b.Property<double?>("AllTagsPercentage")
                        .HasColumnType("REAL")
                        .HasAnnotation("Relational:JsonPropertyName", "all_tags_percentage");

                    b.Property<int>("Count")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "count");

                    b.Property<bool>("HasSynonyms")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "has_synonyms");

                    b.Property<bool>("IsModeratorOnly")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_moderator_only");

                    b.Property<bool>("IsRequired")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "is_required");

                    b.Property<string>("Synonyms")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "synonyms");

                    b.HasKey("Name");

                    b.HasIndex("Count");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("SO_tags.Models.TagsMetadata", b =>
                {
                    b.Property<int>("TotalTags")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.HasKey("TotalTags");

                    b.ToTable("Metadata");
                });
#pragma warning restore 612, 618
        }
    }
}
