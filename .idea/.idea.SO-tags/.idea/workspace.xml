<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoGeneratedRunConfigurationManager">
    <projectFile profileName="IIS Express">SO-tags.csproj</projectFile>
    <projectFile profileName="http">SO-tags.csproj</projectFile>
    <projectFile profileName="https">SO-tags.csproj</projectFile>
    <projectFile profileName="IIS Express">SO-tagsTests/SO-tagsTests.csproj</projectFile>
    <projectFile profileName="http">SO-tagsTests/SO-tagsTests.csproj</projectFile>
    <projectFile profileName="https">SO-tagsTests/SO-tagsTests.csproj</projectFile>
    <projectFile>api/SO-tags.csproj</projectFile>
  </component>
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="b51cdbb0-5760-4864-a685-aa3622964554" name="Changes" comment="Added dynamically loading tags from remote API while local storage doesn't have enough tags to satisfy user request.">
      <change beforePath="$PROJECT_DIR$/api/SO-tags.csproj" beforeDir="false" afterPath="$PROJECT_DIR$/api/SO-tags.csproj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api/tags.dat" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/api/tags.dat-shm" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/api/tags.dat-wal" beforeDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="HighlightingSettingsPerFile">
    <setting file="file://$USER_HOME$/AppData/Local/Symbols/src/dotnet/efcore/c2f996919858eb11d2836705d47b531b5a174c79/src/EFCore/DbSet.cs" root0="SKIP_HIGHLIGHTING" />
    <setting file="file://$USER_HOME$/AppData/Local/Symbols/src/dotnet/runtime/1381d5ebd2ab1f292848d5b19b80cf71ac332508/src/libraries/System.Private.CoreLib/src/System/Threading/CancellationToken.cs" root0="SKIP_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/api/Controllers/TagsController.cs" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/api/LocalTagsContext.cs" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/api/Models/Tag.cs" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/api/Program.cs" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/api/Providers/SoTagsProvider.cs" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/api/appsettings.json" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/apiTests/SOTagsProviderUnitTests.cs" root0="SKIP_HIGHLIGHTING" />
  </component>
  <component name="HttpClientSelectedEnvironments">
    <file url="jar://$APPLICATION_HOME_DIR$/plugins/restClient/lib/restClient.jar!/com/intellij/ws/rest/client/requests/collection/get-requests.http" environment="test" />
    <file url="jar://$APPLICATION_HOME_DIR$/plugins/restClient/lib/restClient.jar!/com/intellij/ws/rest/client/requests/collection/ws-requests.http" environment="test" />
  </component>
  <component name="MetaFilesCheckinStateConfiguration" checkMetaFiles="true" />
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="CurrentFile" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 3
}</component>
  <component name="ProjectId" id="2eGfOauNVBYo4kWdT4t3Cx9YkOl" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    ".NET Launch Settings Profile.SO-tags: http.executor": "Run",
    ".NET Launch Settings Profile.SO-tags: https.executor": "Debug",
    ".NET Launch Settings Profile.SO-tagsTests: http.executor": "Run",
    "Docker.Docker Image.executor": "Run",
    "Docker.Docker-compose.executor": "Run",
    "Docker.Dockerfile base.executor": "Run",
    "Docker.Dockerfile final.executor": "Run",
    "Docker.Dockerfile-tests build.executor": "Run",
    "Docker.Dockerfile-tests final.executor": "Run",
    "Docker.Dockerfile-tests publish.executor": "Run",
    "Docker.Dockerfile-tests.executor": "Run",
    "Docker.Dockerfile.executor": "Run",
    "Docker.SO-tags/Dockerfile.executor": "Run",
    "Docker.apiTests/Dockerfile base.executor": "Run",
    "Docker.apiTests/Dockerfile build.executor": "Run",
    "Docker.apiTests/Dockerfile publish.executor": "Run",
    "Docker.apiTests/Dockerfile.executor": "Run",
    "Docker.docker-compose.yml.api: Compose Deployment.executor": "Run",
    "Docker.docker-compose.yml.api_with_tests: Compose Deployment.executor": "Run",
    "Docker.docker-compose.yml.tests: Compose Deployment.executor": "Run",
    "HTTP Request.All in SO-tags.executor": "Run",
    "HTTP Request.SO_tags-endpoints | #1.executor": "Run",
    "HTTP Request.SO_tags-endpoints_2 | #1.executor": "Run",
    "HTTP Request.SO_tags-endpoints_3 | #1.executor": "Run",
    "HTTP Request.SO_tags-endpoints_4 | #1.executor": "Run",
    "OpenAPI/Swagger Code Generator.SO_tags-openapi_2.yaml.executor": "Run",
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "df696dba-2de5-4be2-ba28-681607d0f34b.executor": "Run",
    "git-widget-placeholder": "main",
    "ignore.virus.scanning.warn.message": "true",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "settings.editor.selected.configurable": "HotReloadSettingsPage",
    "vue.rearranger.settings.migration": "true"
  },
  "keyToStringList": {
    "rider.external.source.directories": [
      "C:\\Users\\Peter\\AppData\\Roaming\\JetBrains\\Rider2023.3\\resharper-host\\DecompilerCache",
      "C:\\Users\\Peter\\AppData\\Roaming\\JetBrains\\Rider2023.3\\resharper-host\\SourcesCache",
      "C:\\Users\\Peter\\AppData\\Local\\Symbols\\src"
    ]
  }
}]]></component>
  <component name="RunManager" selected="Docker.SO-tags/Dockerfile">
    <configuration name="SO-tags" type="DotNetProject" factoryName=".NET Project">
      <option name="EXE_PATH" value="" />
      <option name="PROGRAM_PARAMETERS" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="PASS_PARENT_ENVS" value="1" />
      <option name="USE_EXTERNAL_CONSOLE" value="0" />
      <option name="USE_MONO" value="0" />
      <option name="RUNTIME_ARGUMENTS" value="" />
      <option name="PROJECT_PATH" value="$PROJECT_DIR$/api/SO-tags.csproj" />
      <option name="PROJECT_EXE_PATH_TRACKING" value="1" />
      <option name="PROJECT_ARGUMENTS_TRACKING" value="1" />
      <option name="PROJECT_WORKING_DIRECTORY_TRACKING" value="1" />
      <option name="PROJECT_KIND" value="DotNetCore" />
      <option name="PROJECT_TFM" value="" />
      <method v="2">
        <option name="Build" />
      </method>
    </configuration>
    <configuration name="SO-tags: IIS Express" type="LaunchSettings" factoryName=".NET Launch Settings Profile">
      <option name="LAUNCH_PROFILE_PROJECT_FILE_PATH" value="$PROJECT_DIR$/api/SO-tags.csproj" />
      <option name="LAUNCH_PROFILE_TFM" value="net8.0" />
      <option name="LAUNCH_PROFILE_NAME" value="IIS Express" />
      <option name="USE_EXTERNAL_CONSOLE" value="0" />
      <option name="USE_MONO" value="0" />
      <option name="RUNTIME_ARGUMENTS" value="" />
      <option name="GENERATE_APPLICATIONHOST_CONFIG" value="1" />
      <option name="SHOW_IIS_EXPRESS_OUTPUT" value="0" />
      <option name="SEND_DEBUG_REQUEST" value="1" />
      <option name="ADDITIONAL_IIS_EXPRESS_ARGUMENTS" value="" />
      <method v="2">
        <option name="Build" />
      </method>
    </configuration>
    <configuration name="SO-tags: http" type="LaunchSettings" factoryName=".NET Launch Settings Profile">
      <option name="LAUNCH_PROFILE_PROJECT_FILE_PATH" value="$PROJECT_DIR$/api/SO-tags.csproj" />
      <option name="LAUNCH_PROFILE_TFM" value="net8.0" />
      <option name="LAUNCH_PROFILE_NAME" value="http" />
      <option name="USE_EXTERNAL_CONSOLE" value="0" />
      <option name="USE_MONO" value="0" />
      <option name="RUNTIME_ARGUMENTS" value="" />
      <option name="GENERATE_APPLICATIONHOST_CONFIG" value="1" />
      <option name="SHOW_IIS_EXPRESS_OUTPUT" value="0" />
      <option name="SEND_DEBUG_REQUEST" value="1" />
      <option name="ADDITIONAL_IIS_EXPRESS_ARGUMENTS" value="" />
      <method v="2">
        <option name="Build" />
      </method>
    </configuration>
    <configuration name="SO-tags: https" type="LaunchSettings" factoryName=".NET Launch Settings Profile">
      <option name="LAUNCH_PROFILE_PROJECT_FILE_PATH" value="$PROJECT_DIR$/api/SO-tags.csproj" />
      <option name="LAUNCH_PROFILE_TFM" value="net8.0" />
      <option name="LAUNCH_PROFILE_NAME" value="https" />
      <option name="USE_EXTERNAL_CONSOLE" value="0" />
      <option name="USE_MONO" value="0" />
      <option name="RUNTIME_ARGUMENTS" value="" />
      <option name="GENERATE_APPLICATIONHOST_CONFIG" value="1" />
      <option name="SHOW_IIS_EXPRESS_OUTPUT" value="0" />
      <option name="SEND_DEBUG_REQUEST" value="1" />
      <option name="ADDITIONAL_IIS_EXPRESS_ARGUMENTS" value="" />
      <method v="2">
        <option name="Build" />
      </method>
    </configuration>
    <configuration name="Docker-compose" type="docker-deploy" factoryName="docker-compose.yml" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="envFilePath" value="" />
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <EXTENSION ID="com.jetbrains.rider.docker.debug" isFastModeEnabled="true" isSslEnabled="false" />
      <method v="2" />
    </configuration>
    <configuration name="Dockerfile-tests build" type="docker-deploy" factoryName="dockerfile" temporary="true" server-name="Docker">
      <deployment type="dockerfile">
        <settings>
          <option name="imageTag" value="mcr.microsoft.comdotnetsdk8.0_build" />
          <option name="buildCliOptions" value="--target build" />
          <option name="buildKitEnabled" value="true" />
          <option name="buildOnly" value="true" />
          <option name="sourceFilePath" value="Dockerfile-tests" />
        </settings>
      </deployment>
      <EXTENSION ID="com.jetbrains.rider.docker.debug" isFastModeEnabled="true" isSslEnabled="false" />
      <method v="2" />
    </configuration>
    <configuration name="Dockerfile-tests final" type="docker-deploy" factoryName="dockerfile" temporary="true" server-name="Docker">
      <deployment type="dockerfile">
        <settings>
          <option name="imageTag" value="base_final" />
          <option name="buildCliOptions" value="--target final" />
          <option name="buildKitEnabled" value="true" />
          <option name="buildOnly" value="true" />
          <option name="sourceFilePath" value="Dockerfile-tests" />
        </settings>
      </deployment>
      <EXTENSION ID="com.jetbrains.rider.docker.debug" isFastModeEnabled="true" isSslEnabled="false" />
      <method v="2" />
    </configuration>
    <configuration name="Dockerfile-tests publish" type="docker-deploy" factoryName="dockerfile" temporary="true" server-name="Docker">
      <deployment type="dockerfile">
        <settings>
          <option name="imageTag" value="build_publish" />
          <option name="buildCliOptions" value="--target publish" />
          <option name="buildKitEnabled" value="true" />
          <option name="buildOnly" value="true" />
          <option name="sourceFilePath" value="Dockerfile-tests" />
        </settings>
      </deployment>
      <EXTENSION ID="com.jetbrains.rider.docker.debug" isFastModeEnabled="true" isSslEnabled="false" />
      <method v="2" />
    </configuration>
    <configuration name="Dockerfile-tests" type="docker-deploy" factoryName="dockerfile" temporary="true" server-name="Docker">
      <deployment type="dockerfile">
        <settings>
          <option name="containerName" value="" />
          <option name="sourceFilePath" value="Dockerfile-with-tests" />
        </settings>
      </deployment>
      <EXTENSION ID="com.jetbrains.rider.docker.debug" isFastModeEnabled="true" isSslEnabled="false" />
      <method v="2" />
    </configuration>
    <configuration name="SO-tagsTests/Dockerfile" type="docker-deploy" factoryName="dockerfile" server-name="Docker">
      <deployment type="dockerfile">
        <settings>
          <option name="imageTag" value="so-tagstests" />
          <option name="containerName" value="so-tagstests" />
          <option name="contextFolderPath" value="." />
          <option name="portBindings">
            <list>
              <DockerPortBindingImpl>
                <option name="containerPort" value="8080" />
                <option name="hostIp" value="127.0.0.1" />
                <option name="hostPort" value="8080" />
              </DockerPortBindingImpl>
            </list>
          </option>
          <option name="sourceFilePath" value="SO-tagsTests/Dockerfile" />
        </settings>
      </deployment>
      <EXTENSION ID="com.jetbrains.rider.docker.debug" isFastModeEnabled="true" isSslEnabled="false" />
      <method v="2" />
    </configuration>
    <configuration name="SO-tags/Dockerfile" type="docker-deploy" factoryName="dockerfile" server-name="Docker">
      <deployment type="dockerfile">
        <settings>
          <option name="imageTag" value="so-tags" />
          <option name="containerName" value="so-tags" />
          <option name="portBindings">
            <list>
              <DockerPortBindingImpl>
                <option name="containerPort" value="8080" />
                <option name="hostIp" value="127.0.0.1" />
                <option name="hostPort" value="8080" />
              </DockerPortBindingImpl>
            </list>
          </option>
          <option name="sourceFilePath" value="api/Dockerfile" />
        </settings>
      </deployment>
      <EXTENSION ID="com.jetbrains.rider.docker.debug" isFastModeEnabled="true" isSslEnabled="false" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="docker-compose.yml" temporary="true">
      <deployment type="docker-compose.yml">
        <settings />
      </deployment>
      <EXTENSION ID="com.jetbrains.rider.docker.debug" isFastModeEnabled="true" isSslEnabled="false" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="docker-image" temporary="true">
      <deployment type="docker-image">
        <settings />
      </deployment>
      <method v="2" />
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="dockerfile" temporary="true">
      <deployment type="dockerfile">
        <settings />
      </deployment>
      <EXTENSION ID="com.jetbrains.rider.docker.debug" isFastModeEnabled="true" isSslEnabled="false" />
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml.api_with_tests: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="api_with_tests" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <EXTENSION ID="com.jetbrains.rider.docker.debug" isFastModeEnabled="true" isSslEnabled="false" />
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue=".NET Launch Settings Profile.SO-tags: http" />
      <item itemvalue=".NET Launch Settings Profile.SO-tags: https" />
      <item itemvalue=".NET Launch Settings Profile.SO-tags: IIS Express" />
      <item itemvalue=".NET Project.SO-tags" />
      <item itemvalue="Docker.Docker-compose" />
      <item itemvalue="Docker.SO-tags/Dockerfile" />
      <item itemvalue="Docker.SO-tagsTests/Dockerfile" />
      <item itemvalue="Docker.Dockerfile-tests build" />
      <item itemvalue="Docker.Dockerfile-tests final" />
      <item itemvalue="Docker.Dockerfile-tests publish" />
      <item itemvalue="Docker.docker-compose.yml.api_with_tests: Compose Deployment" />
      <item itemvalue="Docker.Dockerfile-tests" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Docker.Dockerfile-tests" />
        <item itemvalue="Docker.docker-compose.yml.api_with_tests: Compose Deployment" />
        <item itemvalue="Docker.Dockerfile-tests final" />
        <item itemvalue="Docker.Dockerfile-tests publish" />
        <item itemvalue="Docker.Dockerfile-tests build" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="b51cdbb0-5760-4864-a685-aa3622964554" name="Changes" comment="" />
      <created>1711535803281</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1711535803281</updated>
      <workItem from="1711535804379" duration="9758000" />
      <workItem from="1711619026033" duration="5007000" />
      <workItem from="1711698960407" duration="20174000" />
      <workItem from="1711778248530" duration="2978000" />
      <workItem from="1711957403805" duration="213000" />
      <workItem from="1712038460142" duration="20376000" />
      <workItem from="1712067268440" duration="11000" />
      <workItem from="1712080014363" duration="2420000" />
      <workItem from="1712125831586" duration="19813000" />
      <workItem from="1712153973298" duration="20612000" />
      <workItem from="1712218379986" duration="9346000" />
      <workItem from="1712562244325" duration="15095000" />
      <workItem from="1712648089327" duration="14047000" />
    </task>
    <task id="LOCAL-00001" summary="Added dynamically loading tags from remote API while local storage doesn't have enough tags to satisfy user request.">
      <option name="closed" value="true" />
      <created>1712668223480</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1712668223480</updated>
    </task>
    <option name="localTasksCounter" value="2" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="UnityCheckinConfiguration" checkUnsavedScenes="true" />
  <component name="VcsManagerConfiguration">
    <option name="CLEAR_INITIAL_COMMIT_MESSAGE" value="true" />
    <MESSAGE value="Added dynamically loading tags from remote API while local storage doesn't have enough tags to satisfy user request." />
    <option name="LAST_COMMIT_MESSAGE" value="Added dynamically loading tags from remote API while local storage doesn't have enough tags to satisfy user request." />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <default-breakpoints>
        <breakpoint enabled="true" type="DotNet Exception Breakpoints" />
      </default-breakpoints>
    </breakpoint-manager>
    <watches-manager>
      <configuration name="LaunchSettings">
        <watch expression="new System.Collections.Generic.ICollectionDebugView&lt;SO_tags.Models.Tag&gt;($result).Items[6]" />
        <watch expression="$result" />
        <watch expression="tagsToGetFromRemote" />
      </configuration>
    </watches-manager>
  </component>
</project>